{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Training\\\\Desktop\\\\repologin\\\\login\\\\client\\\\src\\\\component\\\\screen\\\\ForgetPasswordScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ForgetPasswordScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n\n  const forgotpasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/auth/forgotpassword\", {\n        email\n      }, config);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgotpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: forgotpasswordHandler,\n      className: \"forgotpassword-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"forgotpassword-screen__title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgotpassword-screen_subtext\",\n          children: \"Please enter the email address you register your account.We will send you reset passsword confirmation to this email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: true,\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          id: \"email\",\n          placeholder: \"Email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgetPasswordScreen, \"XKiBBAJRATork1uleeT9CsxLoYM=\");\n\n_c = ForgetPasswordScreen;\nexport default ForgetPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPasswordScreen\");","map":{"version":3,"sources":["C:/Users/Training/Desktop/repologin/login/client/src/component/screen/ForgetPasswordScreen.js"],"names":["React","useState","axios","ForgetPasswordScreen","email","setEmail","success","setSuccess","error","setError","forgotpasswordHandler","e","preventDefault","config","headers","data","post","response","setTimeout","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,qBAAqB,GAAG,MAAOC,CAAP,IAAa;AACvCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAMA,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMb,KAAK,CAACc,IAAN,CACnB,0BADmB,EACS;AAAEZ,QAAAA;AAAF,OADT,EACoBS,MADpB,CAAvB;AAIAN,MAAAA,UAAU,CAACQ,IAAI,CAACA,IAAN,CAAV;AAEH,KAPD,CAOE,OAAOP,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACS,QAAN,CAAeF,IAAf,CAAoBP,KAArB,CAAR;AACAH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAa,MAAAA,UAAU,CAAC,MAAM;AACbT,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAIH;AAEJ,GAzBD;;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEC,qBAAhB;AAAuC,MAAA,SAAS,EAAC,6BAAjD;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKJ,OAAO,iBAAI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA,kBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,cAHhB,EAKKE,KAAK,iBAAI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,cALd,eAOI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCAEI;AAAG,UAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAO,UAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,QAAQ,MAA5B;AAA6B,UAAA,EAAE,EAAC,OAAhC;AAAwC,UAAA,WAAW,EAAC,eAApD;AAAoE,UAAA,KAAK,EAAEJ,KAA3E;AAAkF,UAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV;AAA3G;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAgBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAxDD;;GAAMjB,oB;;KAAAA,oB;AAyDN,eAAeA,oBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ForgetPasswordScreen = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const forgotpasswordHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n            const { data } = await axios.post(\r\n                \"/api/auth/forgotpassword\", { email }, config\r\n            );\r\n\r\n            setSuccess(data.data)\r\n\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n            setEmail(\"\");\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgotpassword-screen\">\r\n            <form onSubmit={forgotpasswordHandler} className=\"forgotpassword-screen__form\">\r\n                <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\r\n\r\n                {success && <span className=\"success-message\">{success}</span>}\r\n\r\n                {error && <span className=\"error-message\">{error}</span>}\r\n\r\n                <div className=\"form-group\">\r\n\r\n                    <p className=\"forgotpassword-screen_subtext\">\r\n                        Please enter the email address you register your account.We will send you reset passsword confirmation to this email\r\n\r\n                    </p>\r\n                    <label htmlFor>Email: </label>\r\n                    <input type=\"email\" required id=\"email\" placeholder=\"Email address\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Send Email</button>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ForgetPasswordScreen;"]},"metadata":{},"sourceType":"module"}