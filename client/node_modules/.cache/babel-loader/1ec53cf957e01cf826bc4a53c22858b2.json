{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Training\\\\Desktop\\\\repologin\\\\login\\\\client\\\\src\\\\component\\\\screen\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RegisterScreen = ({\n  history\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (localStorage.getItem(\"authToken\")) {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/auth/register\", {\n        username,\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"authToken\", data.token);\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      className: \"register-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"register-screen__title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"UserName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          required: true,\n          id: \"name\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          required: true,\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          required: true,\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter Confirm Password\",\n          required: true,\n          id: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-screen__subtext\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 85\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"+mCSftV3Mazh/LnHFLgpCCtNA04=\");\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/Training/Desktop/repologin/login/client/src/component/screen/RegisterScreen.js"],"names":["React","useState","useEffect","Link","axios","RegisterScreen","history","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","localStorage","getItem","push","registerHandler","e","preventDefault","config","header","setTimeout","data","post","setItem","token","response","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n   history.push(\"/\")\r\n\r\n    }\r\n   }, [history])\r\n\r\n\r\n    const registerHandler = async (e) => {\r\n   e.preventDefault();\r\n\r\n   const config = {\r\n   header: {\r\n   \"Content-Type\": \"application/json\"\r\n   }\r\n   }\r\n\r\n  if (password !== confirmPassword) {\r\n    setPassword(\"\")\r\n    setConfirmPassword(\"\")\r\n\r\n    setTimeout(() => {\r\n    setError(\"\");\r\n    }, 5000);\r\n   return setError(\"Passwords do not match\");\r\n        }\r\n\r\n   try {\r\n   const { data } = await axios.post(\"/api/auth/register\", { username, email, password }, config\r\n    );\r\n    localStorage.setItem(\"authToken\", data.token);\r\n    history.push(\"/\")\r\n   } catch (error) {\r\n   setError(error.response.data.error);\r\n   setTimeout(() => {\r\n   setError('')\r\n   }, 5000)\r\n\r\n    }\r\n\r\n    }\r\n\r\n    return (\r\n    <div className=\"register-screen\">\r\n            <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n                <h3 className=\"register-screen__title\">Register</h3>\r\n\r\n                {/* if there is an error in the state then log that err || && operator always take last two values */}\r\n\r\n                {error && <span className=\"error-message\">{error}</span>}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">UserName</label>\r\n                    <input type=\"text\" placeholder=\"Enter username\" required id=\"name\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" placeholder=\"Enter Email\" required id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" placeholder=\"Enter Password\" required id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Confirm Password</label>\r\n                    <input type=\"password\" placeholder=\"Enter Confirm Password\" required id=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n\r\n                <span className=\"register-screen__subtext\">Already have an account? <Link to=\"/login\">Login</Link></span>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen;"]},"metadata":{},"sourceType":"module"}